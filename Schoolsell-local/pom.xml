<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com</groupId>
    <artifactId>schoolsell</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>

    <name>schoolsell</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>            <!--移除内嵌的tomcat  打包war包需要-->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>1.3.2</version>
        </dependency>

        <!--&lt;!&ndash;就算是打war包也需要引入tomcat,不然MyWebSocket类中的javax会报错 &ndash;&gt;-->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-tomcat</artifactId>-->
        <!--</dependency>-->

        <!--添加servlet-api的依赖   打包war包需要-->
        <!--<dependency>-->
            <!--<groupId>org.apache.tomcat</groupId>-->
            <!--<artifactId>tomcat-servlet-api</artifactId>-->
            <!--<version>8.0.39</version>-->
        <!--</dependency>-->

        <!--添加servlet-api的依赖，不用tomcat-servlet-api的依赖，用javax的。用于代替内嵌的tomcat。
        如果用tomcat-servlet-api的依赖的话，依旧有着内嵌的tomcat，这会导致打成war包时在tomcat服务器上运行失败
        所以目的就是剔除springboot内嵌的tomcat
        -->
        <!--<dependency>-->
            <!--<groupId>javax.servlet</groupId>-->
            <!--<artifactId>javax.servlet-api</artifactId>-->
            <!--<version>3.1.0</version>-->
            <!--<scope>provided</scope>-->
        <!--</dependency>-->


        <!--打包阶段并不会一起打如war包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <!--打包的时候可以不用包进去，别的设施会提供。事实上该依赖理论上可以参与编译，测试，运行等周期。
                相当于compile，但是打包阶段做了exclude操作-->
            <scope>provided</scope>
        </dependency>


        <!--可一起打包的tomcat-websocket -->
        <!-- https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-websocket -->
        <!--<dependency>-->
            <!--<groupId>org.apache.tomcat</groupId>-->
            <!--<artifactId>tomcat-websocket</artifactId>-->
            <!--<version>9.0.12</version>-->
        <!--</dependency>-->



        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--json -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.4</version>
            <classifier>jdk15</classifier>
        </dependency>

        <!--mybatis-generator -->
        <!--<dependency>-->
            <!--<groupId>org.mybatis.generator</groupId>-->
            <!--<artifactId>mybatis-generator-core</artifactId>-->
            <!--<version>1.3.5</version>-->
        <!--</dependency>-->

        <!--websocket -->
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-websocket</artifactId>-->
            <!--<version>2.0.4.RELEASE</version>-->
        <!--</dependency>-->

        <!--AOP 切面 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>


        <!--thumbnailator -->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.8</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
            <version>5.0.8.RELEASE</version>
            <scope>provided</scope>
        </dependency>

        <!-- httpclient工具类 -->
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.6</version>
        </dependency>

        <!--短信验证码 -->
        <!--<dependency>-->
            <!--<groupId>aliyun-message-sdk-core</groupId>-->
            <!--<artifactId>aliyun-message-sdk-core</artifactId>-->
            <!--<version>3.2.3</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/src/main/resources/lib/aliyun-java-sdk-core-3.2.2.jar</systemPath>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>aliyun-message-sdk-mns</groupId>-->
            <!--<artifactId>aliyun-message-sdk-mns</artifactId>-->
            <!--<version>1.1.8</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/src/main/resources/lib/aliyun-sdk-mns-1.1.8.jar</systemPath>-->
        <!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>aliyun-java-sdk-dysmsapi</groupId>-->
            <!--<artifactId>aliyun-java-sdk-dysmsapi</artifactId>-->
            <!--<version>1.0.0</version>-->
            <!--<scope>system</scope>-->
            <!--<systemPath>${project.basedir}/src/main/resources/lib/aliyun-java-sdk-dysmsapi-1.0.0.jar</systemPath>-->
        <!--</dependency>-->

        <!-- -->

    </dependencies>

    <build>
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
            <!--</plugin>-->

            <!--添加mybatis generator maven插件-->
            <!--<plugin>-->
                <!--<groupId>org.mybatis.generator</groupId>-->
                <!--<artifactId>mybatis-generator-maven-plugin</artifactId>-->
                <!--<version>1.3.5</version>-->
                <!--<configuration>-->
                    <!--&lt;!&ndash;generatorConfig.xml位置&ndash;&gt;-->
                    <!--<configurationFile>src/main/resources/mybatis-generator/generatorConfig.xml</configurationFile>-->
                    <!--<verbose>true</verbose>-->
                    <!--<overwrite>true</overwrite>-->
                <!--</configuration>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>Generate MyBatis Artifacts</id>-->
                        <!--<goals>-->
                            <!--<goal>generate</goal>-->
                        <!--</goals>-->
                        <!--<phase>generate-sources</phase>-->
                    <!--</execution>-->
                <!--</executions>-->
                <!--&lt;!&ndash;此处必须添加mysql驱动包&ndash;&gt;-->
                <!--<dependencies>-->
                    <!--<dependency>-->
                        <!--<groupId>mysql</groupId>-->
                        <!--<artifactId>mysql-connector-java</artifactId>-->
                        <!--<scope>runtime</scope>-->
                        <!--<version>5.1.46</version>-->
                    <!--</dependency>-->
                <!--</dependencies>-->
            <!--</plugin>-->


        <sourceDirectory>src/main/java</sourceDirectory>
        <finalName>schoolsell-war</finalName>
        <plugins>
            <!--&lt;!&ndash; 打包成jar包 &ndash;&gt;-->
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<fork>true</fork>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <!--打包成war包 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
            </plugin>

            <!-- spring boot进行debug调试 -->
            <!--<plugin>-->
                <!--<groupId>org.springframework.boot</groupId>-->
                <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                <!--<configuration>-->
                    <!--<jvmArguments>-->
                          <!-- -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8088-->
                    <!--</jvmArguments>-->
                <!--</configuration>-->
            <!--</plugin>-->
        </plugins>
    </build>


</project>
